<Project>
  <Name>GradeBook</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Student</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Student</Name>
        <Access>Public</Access>
        <Location left="467" top="190" />
        <Size width="312" height="378" />
        <Collapsed>False</Collapsed>
        <Member type="Field">StudentDegree degree</Member>
        <Member type="Field">string email</Member>
        <Member type="Field">string firstname</Member>
        <Member type="Field">string lastname</Member>
        <Member type="Field">string note</Member>
        <Member type="Field">StudentScore score</Member>
        <Member type="Field">int studentID</Member>
        <Member type="Property">public StudentDegree Degree { get; set; }</Member>
        <Member type="Property">public string Email { get; }</Member>
        <Member type="Property">public string Firstname { get; }</Member>
        <Member type="Property">public int ID { get; }</Member>
        <Member type="Property">public string Lastname { get; }</Member>
        <Member type="Property">public string Note { get; set; }</Member>
        <Member type="Property">public double Score { get; set; }</Member>
        <Member type="Constructor">public Student(string firstname, string lastname)</Member>
        <Member type="Constructor">public Student(string firstname, string lastname, string email)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Notes:

The student's grade is represented by the overall score the student has earned; e.g. the score is equivalent to (points earned / points available).

Therefore, the grade representations such as a percentage value or a specific letter grade will be calculated and displayed outside of this class, primarily because the professor should have the ability to decide the final grade of the student after mathematical models such as bell curves, weighted grades, seperating students of different grade levels, that chick is really hot, etc.

The student's overall score is stored as a hashtable of assignment id's (key) and points earned for the assignment (value).

The professor should also be able to make a note about a particular student, if desired.

</Text>
        <Location left="829" top="190" />
        <Size width="264" height="378" />
      </Entity>
      <Entity type="Enum">
        <Name>StudentDegree</Name>
        <Access>Public</Access>
        <Location left="253" top="190" />
        <Size width="162" height="130" />
        <Collapsed>False</Collapsed>
        <Value>Graduate</Value>
        <Value>Undergraduate</Value>
      </Entity>
      <Entity type="Class">
        <Name>StudentScore</Name>
        <Access>Public</Access>
        <Location left="122" top="352" />
        <Size width="294" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Hashtable scores</Member>
        <Member type="Method">public void EditScore(int assignmentID, double points)</Member>
        <Member type="Method">public void AddScore(int assignmentID, double points)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>440</X>
          <Y>215</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>442</X>
          <Y>215</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Assignment</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Assignment</Name>
        <Access>Public</Access>
        <Location left="399" top="116" />
        <Size width="318" height="355" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int assignmentID</Member>
        <Member type="Field">string description</Member>
        <Member type="Field">string title</Member>
        <Member type="Field">DateTime created</Member>
        <Member type="Field">DateTime due</Member>
        <Member type="Field">AssignmentType type</Member>
        <Member type="Field">double availablePoints</Member>
        <Member type="Constructor">public Assignment(string title, string description)</Member>
        <Member type="Property">public string Description { get; set; }</Member>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public string Title { get; set; }</Member>
        <Member type="Method">public void ExtendDueDate(DateTime extension)</Member>
        <Member type="Property">public AssignmentType Type { get; set; }</Member>
        <Member type="Property">public double AvailablePoints { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Notes:

The assignment may be of different types. This will play a significant role when the professor chooses to use a weighted grading system; e.g. Homework is 30% of the final grade, Participation is 10%, etc.</Text>
        <Location left="755" top="116" />
        <Size width="282" height="167" />
      </Entity>
      <Entity type="Enum">
        <Name>AssignmentType</Name>
        <Access>Public</Access>
        <Location left="191" top="116" />
        <Size width="162" height="143" />
        <Collapsed>False</Collapsed>
        <Value>Homework</Value>
        <Value>Participation</Value>
        <Value>Exam</Value>
        <Value>Project</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>378</X>
          <Y>139</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>System</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Distribution</Name>
        <Access>Public</Access>
        <Location left="37" top="275" />
        <Size width="226" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">List&lt;DistributionItem&gt; distribution</Member>
        <Member type="Constructor">public Distribution()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Notes:

The distribution class is used on a system level in order to determine how grade distribution is calculated for the students.

For example, the professor can use a configuration file to set homework to be 30% of the student's grade, 20% for exams, etc.</Text>
        <Location left="434" top="28" />
        <Size width="291" height="216" />
      </Entity>
      <Entity type="Class">
        <Name>DistributionItem</Name>
        <Access>Public</Access>
        <Location left="26" top="28" />
        <Size width="293" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">double percentage</Member>
        <Member type="Field">string title</Member>
        <Member type="Field">string description</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GradeBook</Name>
        <Access>Public</Access>
        <Location left="720" top="319" />
        <Size width="291" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">List&lt;Student&gt; students</Member>
        <Member type="Field">List&lt;Assignment&gt; assignments</Member>
        <Member type="Field">Course course</Member>
        <Member type="Field">int gradebookID</Member>
        <Member type="Method">public void AddStudent(Student student)</Member>
        <Member type="Property">public List&lt;Student&gt; Students { get; }</Member>
        <Member type="Property">public List&lt;Assignment&gt; Assignments { get; }</Member>
        <Member type="Method">public void AddAssignment(Assignment assignment)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Professor</Name>
        <Access>Public</Access>
        <Location left="743" top="28" />
        <Size width="268" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">string email</Member>
        <Member type="Field">string firstname</Member>
        <Member type="Field">string lastname</Member>
        <Member type="Field">List&lt;GradeBook&gt; gradebooks</Member>
        <Member type="Property">public string Email { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Course</Name>
        <Access>Public</Access>
        <Location left="479" top="319" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">string description</Member>
        <Member type="Field">int courseID</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="4" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="5" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Utilities</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Excel</Name>
        <Access>Public</Access>
        <Location left="89" top="96" />
        <Size width="300" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void import(GradeBook gradebook, string path)</Member>
        <Member type="Method">public static void export(GradeBook gradebook, string path)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Notes:

Utilities are static so that they can be used anywhere in the program without the use of object initialization.</Text>
        <Location left="736" top="96" />
        <Size width="251" height="136" />
      </Entity>
      <Entity type="Class">
        <Name>Network</Name>
        <Access>Public</Access>
        <Location left="89" top="335" />
        <Size width="464" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void SendEmail(List&lt;Student&gt; students, Assignment assignment, string message)</Member>
        <Member type="Method">public static void SendEmail(List&lt;Student&gt; students, string message)</Member>
        <Member type="Method">public static void SendEmail(Student student, StudentScore score)</Member>
        <Member type="Method">public static void SendEmail(Student student, string message)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Debug</Name>
        <Access>Public</Access>
        <Location left="624" top="339" />
        <Size width="189" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Static</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
</Project>